When would you want to use a remote repository rather than keeping all your work local?
To collaborate with others or to work from different computers and keep the changes in sync.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
Changes someone else pushed to GitHub may conflict with change you are making locally.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
fork is a clone on GitHub, clone copies a repository locally or from GitHub, branches are different code paths within a repository

What is the benefit of having a copy of the last known state of the remote stored locally?
To be able to work offline and diff/merge the changes between the local and remote repositories.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
Sharing code would probaly be the worst way. Possibly using my own subversion server or using an online server, but subversion is limited in how much can be done offline.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
When we need to collaborate and get feedback on a new feature before adding it to master. Branching keeps master clean and from having unnecessary code, but changes directly in master is a faster turnaround, because there is no need to merge as changes go into master leaving the branch out of date.